@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@{
    var viewModel = "@model " + Model.ViewDataTypeName.Split('.')[Model.ViewDataTypeName.Split('.').Length - 1] + "Model";
}
@viewModel
@@*Generated from Custom Template.*@@
@@*Model namespace using directive should be added to _ViewImports.cshtml.*@@

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
@:<h1>@@ViewData["Title"]</h1>
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
}
<div>
    <h4>@Model.ViewDataTypeShortName</h4>
    <hr />
    <dl class="row">
@{
    Dictionary<string, IPropertyMetadata> propertyLookup = ((IModelMetadata)Model.ModelMetadata).Properties.ToDictionary(x => x.PropertyName, x => x);
    Dictionary<string, INavigationMetadata> navigationLookup = ((IModelMetadata)Model.ModelMetadata).Navigations.ToDictionary(x => x.AssociationPropertyName, x => x);

    foreach (var item in Model.ModelMetadata.ModelType.GetProperties())
    {
        if (propertyLookup.TryGetValue(item.Name, out IPropertyMetadata property)
            && property.Scaffold && !property.IsForeignKey && !property.IsPrimaryKey)
        {
        <dt class="col-2">
            @@Html.DisplayNameFor(model => model.@GetValueExpression(property))
        </dt>
        <dd class="col-10">
            @@Html.DisplayFor(model => model.@GetValueExpression(property))
        </dd>
        }
        else if (navigationLookup.TryGetValue(item.Name, out INavigationMetadata navigation))
        {
        <dt class="col-2">
            @@Html.DisplayNameFor(model => model.@GetValueExpression(navigation)Id)
        </dt>
        <dd class="col-10">
            @@Html.DisplayFor(model => model.@GetValueExpression(navigation)Id)
        </dd>
        }
    }
}    </dl>
</div>
<div>
@{
    string pkName = GetPrimaryKeyName();
    if (pkName != null)
    {
    @:<a asp-action="Edit" asp-route-id="@@Model?.@pkName">Edit</a>&nbsp;|&nbsp;
    @:<a asp-action="Index">Back to List</a>
    }
    else
    {
    @:@@Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ })&nbsp;|&nbsp;
    @:<a asp-action="Index">Back to List</a>
    }
}</div>
@{
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
        //ClearIndent();
@:</body>
@:</html>
    }
}



@functions
{
    string GetPrimaryKeyName()
    {
        return (Model.ModelMetadata.PrimaryKeys != null && Model.ModelMetadata.PrimaryKeys.Length == 1)
        ? Model.ModelMetadata.PrimaryKeys[0].PropertyName
        : null;
    }

    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }

    string GetValueExpression(INavigationMetadata navigation)
    {
        return navigation.AssociationPropertyName;
    }
}